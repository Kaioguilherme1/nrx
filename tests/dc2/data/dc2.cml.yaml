lab:
  description: dc2
  notes: 'Autogenerated by NRX: https://github.com/netreplica/nrx'
  title: dc2
  version: 0.2.0
links:
  - id: l0
    n1: n6
    n2: n0
    i1: i3
    i2: i2
    label: dc2-tor-1-Ethernet1/49<->dc2-spine-1-Ethernet1/1
  - id: l1
    n1: n6
    n2: n1
    i1: i4
    i2: i2
    label: dc2-tor-1-Ethernet1/50<->dc2-spine-2-Ethernet1/1
  - id: l2
    n1: n7
    n2: n0
    i1: i3
    i2: i3
    label: dc2-tor-2-Ethernet1/49<->dc2-spine-1-Ethernet1/2
  - id: l3
    n1: n7
    n2: n1
    i1: i4
    i2: i3
    label: dc2-tor-2-Ethernet1/50<->dc2-spine-2-Ethernet1/2
  - id: l4
    n1: n8
    n2: n0
    i1: i3
    i2: i4
    label: dc2-tor-3-Ethernet1/49<->dc2-spine-1-Ethernet1/3
  - id: l5
    n1: n8
    n2: n1
    i1: i4
    i2: i4
    label: dc2-tor-3-Ethernet1/50<->dc2-spine-2-Ethernet1/3
  - id: l6
    n1: n9
    n2: n0
    i1: i3
    i2: i5
    label: dc2-tor-4-Ethernet1/49<->dc2-spine-1-Ethernet1/4
  - id: l7
    n1: n9
    n2: n1
    i1: i4
    i2: i5
    label: dc2-tor-4-Ethernet1/50<->dc2-spine-2-Ethernet1/4
nodes:
  - id: n6
    label: dc2-tor-1
    node_definition: nxosv9000
    image_definition: null
    boot_disk_size: null
    cpu_limit: null
    cpus: null
    data_volume: null
    ram: null
    hide_links: false
    tags: []
    x: 1800
    y: 1800
    configuration: |-
      hostname dc2-tor-1
      # workaround for booting to loader> prompt
      echo 'from cli import cli' > set_boot.py
      echo 'import json' >> set_boot.py
      echo 'import os' >> set_boot.py
      echo 'import time' >> set_boot.py
      echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
      echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
      echo 'i = 0' >> set_boot.py
      echo 'while i < 10:' >> set_boot.py
      echo '    try:' >> set_boot.py
      echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
      echo '        break' >> set_boot.py
      echo '    except Exception:' >> set_boot.py
      echo '        i += 1' >> set_boot.py
      echo '        time.sleep(1)' >> set_boot.py
      echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
      event manager applet BOOTCONFIG
       event syslog pattern "Configured from vty"
       action 1.0 cli python bootflash:set_boot.py
      # minimum needed config to login
      no password strength-check
      username admin role network-admin
      username admin password cisco role network-admin
      username cisco role network-admin
      username cisco password cisco role network-admin
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/49
        slot: 49
        type: physical
      - id: i4
        label: Ethernet1/50
        slot: 50
        type: physical

  - id: n0
    label: dc2-spine-1
    node_definition: nxosv9000
    image_definition: null
    boot_disk_size: null
    cpu_limit: null
    cpus: null
    data_volume: null
    ram: null
    hide_links: false
    tags: []
    x: 0
    y: 0
    configuration: |-
      hostname dc2-spine-1
      # workaround for booting to loader> prompt
      echo 'from cli import cli' > set_boot.py
      echo 'import json' >> set_boot.py
      echo 'import os' >> set_boot.py
      echo 'import time' >> set_boot.py
      echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
      echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
      echo 'i = 0' >> set_boot.py
      echo 'while i < 10:' >> set_boot.py
      echo '    try:' >> set_boot.py
      echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
      echo '        break' >> set_boot.py
      echo '    except Exception:' >> set_boot.py
      echo '        i += 1' >> set_boot.py
      echo '        time.sleep(1)' >> set_boot.py
      echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
      event manager applet BOOTCONFIG
       event syslog pattern "Configured from vty"
       action 1.0 cli python bootflash:set_boot.py
      # minimum needed config to login
      no password strength-check
      username admin role network-admin
      username admin password cisco role network-admin
      username cisco role network-admin
      username cisco password cisco role network-admin
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        slot: 3
        type: physical
      - id: i5
        label: Ethernet1/4
        slot: 4
        type: physical

  - id: n1
    label: dc2-spine-2
    node_definition: nxosv9000
    image_definition: null
    boot_disk_size: null
    cpu_limit: null
    cpus: null
    data_volume: null
    ram: null
    hide_links: false
    tags: []
    x: 500
    y: 500
    configuration: |-
      hostname dc2-spine-2
      # workaround for booting to loader> prompt
      echo 'from cli import cli' > set_boot.py
      echo 'import json' >> set_boot.py
      echo 'import os' >> set_boot.py
      echo 'import time' >> set_boot.py
      echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
      echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
      echo 'i = 0' >> set_boot.py
      echo 'while i < 10:' >> set_boot.py
      echo '    try:' >> set_boot.py
      echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
      echo '        break' >> set_boot.py
      echo '    except Exception:' >> set_boot.py
      echo '        i += 1' >> set_boot.py
      echo '        time.sleep(1)' >> set_boot.py
      echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
      event manager applet BOOTCONFIG
       event syslog pattern "Configured from vty"
       action 1.0 cli python bootflash:set_boot.py
      # minimum needed config to login
      no password strength-check
      username admin role network-admin
      username admin password cisco role network-admin
      username cisco role network-admin
      username cisco password cisco role network-admin
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        slot: 3
        type: physical
      - id: i5
        label: Ethernet1/4
        slot: 4
        type: physical

  - id: n7
    label: dc2-tor-2
    node_definition: nxosv9000
    image_definition: null
    boot_disk_size: null
    cpu_limit: null
    cpus: null
    data_volume: null
    ram: null
    hide_links: false
    tags: []
    x: 2200
    y: 2200
    configuration: |-
      hostname dc2-tor-2
      # workaround for booting to loader> prompt
      echo 'from cli import cli' > set_boot.py
      echo 'import json' >> set_boot.py
      echo 'import os' >> set_boot.py
      echo 'import time' >> set_boot.py
      echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
      echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
      echo 'i = 0' >> set_boot.py
      echo 'while i < 10:' >> set_boot.py
      echo '    try:' >> set_boot.py
      echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
      echo '        break' >> set_boot.py
      echo '    except Exception:' >> set_boot.py
      echo '        i += 1' >> set_boot.py
      echo '        time.sleep(1)' >> set_boot.py
      echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
      event manager applet BOOTCONFIG
       event syslog pattern "Configured from vty"
       action 1.0 cli python bootflash:set_boot.py
      # minimum needed config to login
      no password strength-check
      username admin role network-admin
      username admin password cisco role network-admin
      username cisco role network-admin
      username cisco password cisco role network-admin
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/49
        slot: 49
        type: physical
      - id: i4
        label: Ethernet1/50
        slot: 50
        type: physical

  - id: n8
    label: dc2-tor-3
    node_definition: nxosv9000
    image_definition: null
    boot_disk_size: null
    cpu_limit: null
    cpus: null
    data_volume: null
    ram: null
    hide_links: false
    tags: []
    x: 2600
    y: 2600
    configuration: |-
      hostname dc2-tor-3
      # workaround for booting to loader> prompt
      echo 'from cli import cli' > set_boot.py
      echo 'import json' >> set_boot.py
      echo 'import os' >> set_boot.py
      echo 'import time' >> set_boot.py
      echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
      echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
      echo 'i = 0' >> set_boot.py
      echo 'while i < 10:' >> set_boot.py
      echo '    try:' >> set_boot.py
      echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
      echo '        break' >> set_boot.py
      echo '    except Exception:' >> set_boot.py
      echo '        i += 1' >> set_boot.py
      echo '        time.sleep(1)' >> set_boot.py
      echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
      event manager applet BOOTCONFIG
       event syslog pattern "Configured from vty"
       action 1.0 cli python bootflash:set_boot.py
      # minimum needed config to login
      no password strength-check
      username admin role network-admin
      username admin password cisco role network-admin
      username cisco role network-admin
      username cisco password cisco role network-admin
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/49
        slot: 49
        type: physical
      - id: i4
        label: Ethernet1/50
        slot: 50
        type: physical

  - id: n9
    label: dc2-tor-4
    node_definition: nxosv9000
    image_definition: null
    boot_disk_size: null
    cpu_limit: null
    cpus: null
    data_volume: null
    ram: null
    hide_links: false
    tags: []
    x: 3000
    y: 3000
    configuration: |-
      hostname dc2-tor-4
      # workaround for booting to loader> prompt
      echo 'from cli import cli' > set_boot.py
      echo 'import json' >> set_boot.py
      echo 'import os' >> set_boot.py
      echo 'import time' >> set_boot.py
      echo 'bootimage = json.loads(cli("show version | json"))["kick_file_name"]' >> set_boot.py
      echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
      echo 'i = 0' >> set_boot.py
      echo 'while i < 10:' >> set_boot.py
      echo '    try:' >> set_boot.py
      echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
      echo '        break' >> set_boot.py
      echo '    except Exception:' >> set_boot.py
      echo '        i += 1' >> set_boot.py
      echo '        time.sleep(1)' >> set_boot.py
      echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
      event manager applet BOOTCONFIG
       event syslog pattern "Configured from vty"
       action 1.0 cli python bootflash:set_boot.py
      # minimum needed config to login
      no password strength-check
      username admin role network-admin
      username admin password cisco role network-admin
      username cisco role network-admin
      username cisco password cisco role network-admin
    interfaces:
      - id: i0
        label: Loopback0
        type: loopback
      - id: i1
        label: mgmt0
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/49
        slot: 49
        type: physical
      - id: i4
        label: Ethernet1/50
        slot: 50
        type: physical

annotations: []
